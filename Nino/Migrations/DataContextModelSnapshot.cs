// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nino;

#nullable disable

namespace Nino.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("Nino.Records.Configuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CongaPrefix")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Locale")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProgressDisplay")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReleasePrefix")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<int>("UpdateDisplay")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("Nino.Records.Episode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Done")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GuildId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ReminderPosted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("Nino.Records.Observer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Blame")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GuildId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginGuildId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProgressWebhook")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReleasesWebhook")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Observers");
                });

            modelBuilder.Entity("Nino.Records.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AirReminderChannelId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("AirReminderEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AirReminderRoleId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AirReminderUserId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AniListId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AniListOffset")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CongaParticipants")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CongaReminderChannelId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("CongaReminderEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan?>("CongaReminderPeriod")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("GuildId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Motd")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PosterUri")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReleaseChannelId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdateChannelId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Nino.Records.Configuration", b =>
                {
                    b.OwnsMany("Nino.Records.Administrator", "Administrators", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("ConfigurationId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("UserId")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("ConfigurationId");

                            b1.ToTable("Configurations_Administrators");

                            b1.WithOwner()
                                .HasForeignKey("ConfigurationId");
                        });

                    b.Navigation("Administrators");
                });

            modelBuilder.Entity("Nino.Records.Episode", b =>
                {
                    b.HasOne("Nino.Records.Project", "Project")
                        .WithMany("Episodes")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("Nino.Records.Staff", "AdditionalStaff", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("EpisodeId")
                                .HasColumnType("TEXT");

                            b1.Property<bool>("IsPseudo")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("UserId")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("EpisodeId");

                            b1.ToTable("Episodes_AdditionalStaff");

                            b1.WithOwner()
                                .HasForeignKey("EpisodeId");

                            b1.OwnsOne("Nino.Records.Role", "Role", b2 =>
                                {
                                    b2.Property<Guid>("StaffId")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("Abbreviation")
                                        .IsRequired()
                                        .HasMaxLength(16)
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasMaxLength(32)
                                        .HasColumnType("TEXT");

                                    b2.Property<decimal?>("Weight")
                                        .HasColumnType("TEXT");

                                    b2.HasKey("StaffId");

                                    b2.ToTable("Episodes_AdditionalStaff");

                                    b2.WithOwner()
                                        .HasForeignKey("StaffId");
                                });

                            b1.Navigation("Role")
                                .IsRequired();
                        });

                    b.OwnsMany("Nino.Records.PinchHitter", "PinchHitters", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Abbreviation")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("EpisodeId")
                                .HasColumnType("TEXT");

                            b1.Property<ulong>("UserId")
                                .HasColumnType("INTEGER");

                            b1.HasKey("Id");

                            b1.HasIndex("EpisodeId");

                            b1.ToTable("PinchHitter");

                            b1.WithOwner()
                                .HasForeignKey("EpisodeId");
                        });

                    b.OwnsMany("Nino.Records.Task", "Tasks", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Abbreviation")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<bool>("Done")
                                .HasColumnType("INTEGER");

                            b1.Property<Guid>("EpisodeId")
                                .HasColumnType("TEXT");

                            b1.Property<DateTimeOffset?>("LastReminded")
                                .HasColumnType("TEXT");

                            b1.Property<DateTimeOffset?>("Updated")
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("EpisodeId");

                            b1.ToTable("Task");

                            b1.WithOwner()
                                .HasForeignKey("EpisodeId");
                        });

                    b.Navigation("AdditionalStaff");

                    b.Navigation("PinchHitters");

                    b.Navigation("Project");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Nino.Records.Observer", b =>
                {
                    b.HasOne("Nino.Records.Project", "Project")
                        .WithMany("Observers")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Nino.Records.Project", b =>
                {
                    b.OwnsMany("Nino.Records.Alias", "Aliases", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("ProjectId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .UseCollation("NOCASE");

                            b1.HasKey("Id");

                            b1.HasIndex("ProjectId");

                            b1.ToTable("Alias");

                            b1.WithOwner()
                                .HasForeignKey("ProjectId");
                        });

                    b.OwnsMany("Nino.Records.Administrator", "Administrators", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("ProjectId")
                                .HasColumnType("TEXT");

                            b1.Property<ulong>("UserId")
                                .HasColumnType("INTEGER");

                            b1.HasKey("Id");

                            b1.HasIndex("ProjectId");

                            b1.ToTable("Projects_Administrators");

                            b1.WithOwner()
                                .HasForeignKey("ProjectId");
                        });

                    b.OwnsMany("Nino.Records.Staff", "KeyStaff", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<bool>("IsPseudo")
                                .HasColumnType("INTEGER");

                            b1.Property<Guid>("ProjectId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("UserId")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("ProjectId");

                            b1.ToTable("Projects_KeyStaff");

                            b1.WithOwner()
                                .HasForeignKey("ProjectId");

                            b1.OwnsOne("Nino.Records.Role", "Role", b2 =>
                                {
                                    b2.Property<Guid>("StaffId")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("Abbreviation")
                                        .IsRequired()
                                        .HasMaxLength(16)
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasMaxLength(32)
                                        .HasColumnType("TEXT");

                                    b2.Property<decimal?>("Weight")
                                        .HasColumnType("TEXT");

                                    b2.HasKey("StaffId");

                                    b2.ToTable("Projects_KeyStaff");

                                    b2.WithOwner()
                                        .HasForeignKey("StaffId");
                                });

                            b1.Navigation("Role")
                                .IsRequired();
                        });

                    b.Navigation("Administrators");

                    b.Navigation("Aliases");

                    b.Navigation("KeyStaff");
                });

            modelBuilder.Entity("Nino.Records.Project", b =>
                {
                    b.Navigation("Episodes");

                    b.Navigation("Observers");
                });
#pragma warning restore 612, 618
        }
    }
}
