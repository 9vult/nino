{
  "singular": {
    "additionalStaff.added": "Я добавила {staff_1} на позицию {abbreviation_2} в серии {episode_3}.",
    "additionalStaff.removed": "Позиция {abbreviation_1} убрана из серии {episode_2}.",
    "additionalStaff.swapped": "{staff_1} становится на замену на позицию {abbreviation_2} в серии {episode_3}.",
    "airDate.estimatedHeader": "Предположительно:",
    "airDate.future": "Выйдет в эфир {date_1} ({rel_2})",
    "airDate.past": "Вышла в эфир {date_1} ({rel_2})",
    "atMe.entry": "`{nickname_1}` ({episode_2}): {tasks_3}",
    "episode.lastUpdated": "Обновлено {rel_1}",
    "episode.removed": "Я убрала серию {number_1} из проекта `{project_2}`.",
    "error.alias.inUse": "Этот синоним уже занят проектом `{aliasproj_1}`.",
    "error.anilist.apiError": "Дата выхода в эфир неизвестна: ошибка API AniList",
    "error.anilist.generic": "Дата выхода в эфир неизвестна: ошибка Anilist",
    "error.anilist.notSpecified": "Дата выхода в эфир неизвестна: не указана на AniList",
    "error.anilist.responseEmpty": "Дата выхода в эфир неизвестна: ответ AniList пуст",
    "error.blameFailureGeneric": "Проект завершён, либо указанная серия не найдена.",
    "error.doneFailureGeneric": "Твоя задача выполнена для всех серий, либо указанная серия не найдена.",
    "error.generic": "Произошла ошибка.",
    "error.noRoster": "На этот проект не назначен основной состав работников.",
    "error.noSuchObserver": "Такого наблюдателя не существует!",
    "error.noSuchProject": "Такого проекта не существует!",
    "error.noSuchTask": "Не существует задачи {abbreviation_1}!",
    "error.notPrivileged": "Надо быть администратором для совершения этого действия!",
    "error.permissionDenied": "У тебя нет права на это действие.",
    "error.positionExists": "Эта позиция уже существует.",
    "error.progress.taskAlreadyDone": "Задача {abbreviation_1} уже выполнена!",
    "error.progress.taskNotDone": "Задача {abbreviation_1} не выполнена!",
    "keyStaff.added": "{staff_1} теперь есть на позиции {abbreviation_2}.",
    "keyStaff.swapped": "{staff_1} становится на замену на позицию {abbreviation_2}.",
    "keyStaff.weight.updated": "Вес позиции {abbreviation_1} установлен в {weight_2}.",
    "progress.done": "Славная работа. **{taskName_1}** серии {episode_2}: готово!",
    "progress.done.inTheDust": "Команда ещё работает над серией **{currentEpisode_1}**, но твоя задача в ней уже выполнена.\n**{taskName_2}** дальше требуется в серии **{nextEpisode_3}**; хочешь, я поставлю отметку в ней?",
    "progress.done.inTheDust.doItNow.button": "Давай!",
    "progress.done.inTheDust.dontDoIt": "Ладно, тогда я ничего не трогаю.",
    "progress.done.inTheDust.dontDoIt.button": "Отмена",
    "progress.done.inTheDust.question": "Что мне следует сделать?",
    "progress.done.inTheDust.timeout": "Я прождала целую минуту, но так и не услышала, чего ты хочешь!",
    "progress.episodeComplete": "Кстати, на этом серия {episode_1} заершена!",
    "progress.skipped": "**{taskName_1}** серии {episode_2} пропускаем.\nЕсли всё ж решишь сделать, то сначала запусти `/undone`.",
    "progress.skipped.appendage": "(пропускается)",
    "progress.undone": "**{taskName_2}** серии {episode_1} всё-таки, значит, ещё надо доделать.",
    "project.alias.addedAlias": "Я добавила синоним `{alias_1}` к проекту `{project_2}`.",
    "project.alias.removedAlias": "Я убрала синоним `{alias_1}` из проекта `{project_2}`.",
    "project.deleted": "Я зачистила проект **{project_1}**. 残念。",
    "project.owner.transferred": "{staff_1} теперь владеет проектом `{project_2}`. Удачи!",
    "title.projectCreation": "Создание проекта",
    "title.projectDeletion": "Удаление проекта",
    "title.projectModification": "Изменение проекта",
    "title.taskComplete": "Задача выполнена",
    "title.taskIncomplete": "Задача не выполнена",
    "title.taskSkipped": "Задача пропущена"
  },
  "plural": {
    "progress.done.inTheDust.doItNow": {
      "few": "Хорошо, отмечу.\n{taskName_1} теперь на {count_2} серии впереди.",
      "many": "Хорошо, отмечу.\n{taskName_1} теперь на {count_2} серий впереди.",
      "one": "Хорошо, отмечу.\n{taskName_1} теперь на {count_2} серию впереди.",
      "other": "Хорошо, отмечу.\n{taskName_1} теперь на {count_2} серии впереди."
    }
  }
}